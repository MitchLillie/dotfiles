# This is Git's per-user configuration file.
[user]
	name = Mitch Lillie
	email = mitch.lillie@shopify.com # NOTE: Fill this in

[alias]
	aliases = !git config --get-regexp ^alias\\. | sed -e s/^alias.// -e s/\\ /\\ $(printf \"\\043\")--\\>\\ / | column -t -s $(printf \"\\043\") | sort -k 1
	blow = checkout -- .
	camend = commit --amend --no-edit
	cleanup = !git remote prune origin && git branch -vv | grep ': gone]' | awk '{print $1}' | xargs git branch -D
	cnv = commit --no-verify
	# sstash = !git stash "$1" stash@{$2}
	chart = log --oneline --graph --all --decorate --abbrev-commit
	ancestor = "!a() { git merge-base \"$1\" HEAD; }; a"
	cached = diff --cached
	create-pull-request = !sh -c 'stash pull-request $0 $@'
	co = !"find_and_checkout_branch(){\
			for last; do true; done ; \
			pattern='^/.*/$' ;\
			if [[ $# -eq 1 && $last =~ $pattern ]] ;\
			then \
				branch_pattern=`echo $last | sed -e 's/^\\///' -e 's/\\/$//'` ;\
				branch=`git for-each-ref --sort=-committerdate --format='%(refname:short)' refs/heads/ | grep -E $branch_pattern | head -n1` ;\
				if [[ $branch ]] ; then \
					git checkout $branch ;\
				else \
					echo "No branch found matching $last" ; \
					exit 1 ; \
				fi \
			else \
				git checkout $@ ;\
			fi \
		} ; find_and_checkout_branch"
	current-remote = !git for-each-ref --format='%(upstream:short)' "$(git symbolic-ref -q HEAD)"
	pullf = !git fetch --all && git reset --hard "$(git current-remote)"
	pushf = push --force-with-lease
	rbo = !git fetch --all && git rebase --autostash origin/main
[fetch]
	prune = true
[push]
	default = current
# [core]
# 	editor = code --wait
[include]
	path = /Users/mitch/.config/dev/gitconfig
[pull]
	ff = only
